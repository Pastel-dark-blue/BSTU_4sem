-- 1 таблица "Водители на перевозках", найти макс., мин., сред., общую оплату за перевозки и общее кол-во перевозок
select	max([Оплата, USD]) as [Максимальная оплата],
		min([Оплата, USD]) as [Минимальная оплата],
		avg([Оплата, USD]) as [Средняя оплата],
		sum([Оплата, USD]) as [Общая оплата за все перевозки],
		count(*) as [Кол-во перевозок]
	from [Водители на перевозках]

-- 2 все таблицы базы данных, для каждого водителя определить макс., мин., сред., суммарн. дальности перевозок и общее кол-во перевозок
select	[Водители].Код_водителя,
		[Водители].Фамилия,
		[Водители].Имя,
		max([Дальность, км]) as [Максимальная дальность],
		min([Дальность, км]) as [Минимальная дальность],
		avg([Дальность, км]) as [Средняя дальность],
		sum([Дальность, км]) as [Общая дальность всех перевозок],
		count(*) as [Кол-во перевозок]
	from [Водители] inner join [Водители на перевозках]
	on [Водители].Код_водителя = [Водители на перевозках].Код_водителя
	inner join [Перевозки]
	on [Водители на перевозках].Код_перевозки = [Перевозки].Код_перевозки
	inner join [Маршруты]
	on [Перевозки].Код_маршрута = [Маршруты].Код_маршрута
	group by [Водители].Код_водителя, [Водители].Фамилия, [Водители].Имя

-- 3 таблица "Маршруты", найти количество диапазонов дальностей маршрутов в заданном диапазоне, при этом осущесвтить сортировку по пределам цен в порядке возрастания
select * 
	from (
		select case
			when Маршруты.[Дальность, км] < 200 then 'меньше 200'
			when Маршруты.[Дальность, км] between 200 and 500 then 'от 200 до 500'
			else 'больше 500'
		end as [Пределы дальностей, км],
		count(*) as [Количество маршрутов]
		from Маршруты group by 
		case
			when Маршруты.[Дальность, км] < 200 then 'меньше 200'
			when Маршруты.[Дальность, км] between 200 and 500 then 'от 200 до 500'
			else 'больше 500'
		end
	) as T
	order by
		case [Пределы дальностей, км]
			when 'меньше 200' then 3
			when 'от 200 до 500' then 2
			when 'больше 500' then 1
			else 0
		end

-- 6 Таблицы "Водители", "Водители на перевозках", "Перевозки" просмотреть общую оплату для каждого водителя за все перевозки, осуществленные после 2021-11-12 
select	Водители.Фамилия,
		Водители.Имя,
		Водители.Код_водителя,
		sum([Водители на перевозках].[Оплата, USD]) as [Общая оплата за перевозки после 2021-11-12]
		from [Водители на перевозках] inner join Перевозки
		on ([Водители на перевозках].Код_перевозки = Перевозки.Код_перевозки
		and Перевозки.Дата_возвращения > '20211112')
		right join Водители 
		on Водители.Код_водителя = [Водители на перевозках].Код_водителя
		group by Водители.Фамилия, Водители.Имя, Водители.Код_водителя

--5 (ROLLUP)
select	Водители.Фамилия,
		Водители.Имя,
		Водители.Код_водителя,
		sum([Водители на перевозках].[Оплата, USD]) as [Общая оплата за перевозки после 2021-11-12]
		from [Водители на перевозках] inner join Перевозки
		on ([Водители на перевозках].Код_перевозки = Перевозки.Код_перевозки
		and Перевозки.Дата_возвращения > '20211112')
		right join Водители 
		on Водители.Код_водителя = [Водители на перевозках].Код_водителя
		group by ROLLUP(Водители.Фамилия, Водители.Имя, Водители.Код_водителя)

-- 6 (CUBE)
select	Водители.Фамилия,
		Водители.Имя,
		Водители.Код_водителя,
		sum([Водители на перевозках].[Оплата, USD]) as [Общая оплата за перевозки после 2021-11-12]
		from [Водители на перевозках] inner join Перевозки
		on ([Водители на перевозках].Код_перевозки = Перевозки.Код_перевозки
		and Перевозки.Дата_возвращения > '20211112')
		right join Водители 
		on Водители.Код_водителя = [Водители на перевозках].Код_водителя
		group by CUBE(Водители.Фамилия, Водители.Имя, Водители.Код_водителя)
