--1 (перевозки и соответствующие им маршруты)
SELECT Перевозки.Код_перевозки, Маршруты.Название
	FROM Перевозки INNER JOIN Маршруты
	ON Перевозки.Код_маршрута = Маршруты.Код_маршрута;

--2 (перевозки и соответствующие им маршруты, при этом в маршруте должно быть слово "Минск")
SELECT Перевозки.Код_перевозки, Маршруты.Название
	FROM Перевозки INNER JOIN Маршруты
	ON Перевозки.Код_маршрута = Маршруты.Код_маршрута
	WHERE Маршруты.Название LIKE '%Минск%';

--3 (Написать два SELECT-запроса, формирующих результирующие наборы аналогичные запросам из заданий 1 и 2, но без применения INNER JOIN)
SELECT Перевозки.Код_перевозки, Маршруты.Название
	FROM Перевозки, Маршруты
	WHERE Перевозки.Код_маршрута = Маршруты.Код_маршрута;

SELECT Перевозки.Код_перевозки, Маршруты.Название
	FROM Перевозки, Маршруты
	WHERE Перевозки.Код_маршрута = Маршруты.Код_маршрута
	AND Маршруты.Название LIKE '%Минск%';

--4 (На основе таблиц "Водители" и "Водители на перевозках" сформировать перечень водителей, оплата которых равна 100, 75 и 200. 
--Результирующий набор должен содержать столбцы: фамилия, имя, отчество водителя и оплата. Оплату записать прописью. 
--Результирующий набор отсортировать в порядке возрастания по столбцам фио и в порядке убывания по оплате)
--Примечание: использовать соединение INNER JOIN, предикат BETWEEN (в нашем случае не нужен) и выражение CASE.
SELECT Водители.Фамилия, 
	Водители.Имя, 
	Водители.Отчество, 
	CASE [Водители на перевозках].[Оплата, USD]
		WHEN 75 THEN 'семьдесят пять'
		WHEN 100 THEN 'сто'
		WHEN 200 THEN 'двести'
	END
	FROM Водители INNER JOIN [Водители на перевозках]
	ON Водители.Код_водителя = [Водители на перевозках].Код_водителя
	WHERE [Водители на перевозках].[Оплата, USD] IN (75, 100, 200)
	ORDER BY Водители.Фамилия,
		Водители.Имя, 
		Водители.Отчество, 
		[Водители на перевозках].[Оплата, USD] DESC;

--5 (Переписать запрос, реализующий задание 4 таким образом, чтобы в результирующем наборе сортировка по оплате была следующей: 
--сначала выводились строки с оплатой 75, затем строки с оплатой 200 и далее строки с оплатой 100. Примечание: использовать выражение CASE в секции ORDER BY.)
SELECT Водители.Фамилия, 
	Водители.Имя, 
	Водители.Отчество, 
	CASE [Водители на перевозках].[Оплата, USD]
		WHEN 75 THEN 'семьдесят пять'
		WHEN 100 THEN 'сто'
		WHEN 200 THEN 'двести'
	END
	FROM Водители INNER JOIN [Водители на перевозках]
	ON Водители.Код_водителя = [Водители на перевозках].Код_водителя
	WHERE [Водители на перевозках].[Оплата, USD] IN (75, 100, 200)
	ORDER BY 
		(CASE [Водители на перевозках].[Оплата, USD]
			WHEN 75 THEN 1
			WHEN 100 THEN 3
			WHEN 200 THEN 2
		END);

--6 (Получить полный перечень маршрутов, а также коды перевозок соответствующих им и ФИО с кодами водителей на этих перевозках.
--При этом, если ФИО пустое, то заменить его на "***"
SELECT Маршруты.Название,
	Перевозки.Код_перевозки,
	isnull(Водители.Фамилия, '***') AS Фамилия_водителя,
	isnull(Водители.Имя, '***') AS Имя_водителя,
	isnull(Водители.Отчество, '***') AS Отчество_водителя,
	Водители.Код_водителя
	FROM Маршруты LEFT JOIN Перевозки
		ON Маршруты.Код_маршрута = Перевозки.Код_маршрута
	LEFT JOIN [Водители на перевозках]
		ON Перевозки.Код_перевозки = [Водители на перевозках].Код_перевозки
	LEFT JOIN Водители
		ON [Водители на перевозках].Код_водителя = Водители.Код_водителя;

--7 (Повторить результат предыдущего запроса, используя RIGHT JOIN)
SELECT Маршруты.Название,
	Перевозки.Код_перевозки,
	isnull(Водители.Фамилия, '***') AS Фамилия_водителя,
	isnull(Водители.Имя, '***') AS Имя_водителя,
	isnull(Водители.Отчество, '***') AS Отчество_водителя,
	Водители.Код_водителя
	FROM Водители RIGHT JOIN [Водители на перевозках]
		ON [Водители на перевозках].Код_водителя = Водители.Код_водителя
	RIGHT JOIN Перевозки
		ON Перевозки.Код_перевозки = [Водители на перевозках].Код_перевозки
	RIGHT JOIN Маршруты
		ON Маршруты.Код_маршрута = Перевозки.Код_маршрута;

--8 (Показать на примере, что соединение FULL OUTER JOIN двух таблиц: )
--8.1 (является коммутативной операцией;)
--следующие два запроса выводят соответствие между перевозками и водителями на них, если какой-либо перевозке не соответствует
--водитель, то в поле перевозки мы увидим NULL, и то же самое, если водителю не соответствует ни одной перевозки
SELECT 	[Водители на перевозках].Код_перевозки,
	isnull(Водители.Фамилия, '***') AS Фамилия_водителя,
	isnull(Водители.Имя, '***') AS Имя_водителя,
	isnull(Водители.Отчество, '***') AS Отчество_водителя,
	Водители.Код_водителя
	FROM Водители FULL JOIN [Водители на перевозках]
	ON Водители.Код_водителя = [Водители на перевозках].Код_водителя;

SELECT 	[Водители на перевозках].Код_перевозки,
	isnull(Водители.Фамилия, '***') AS Фамилия_водителя,
	isnull(Водители.Имя, '***') AS Имя_водителя,
	isnull(Водители.Отчество, '***') AS Отчество_водителя,
	Водители.Код_водителя
	FROM [Водители на перевозках] FULL JOIN Водители
	ON Водители.Код_водителя = [Водители на перевозках].Код_водителя;

--8.2 (является объединением LEFT OUTER JOIN и RIGHT OUTER JOIN соединений этих таблиц;)
SELECT 	[Водители на перевозках].Код_перевозки,
	isnull(Водители.Фамилия, '***') AS Фамилия_водителя,
	isnull(Водители.Имя, '***') AS Имя_водителя,
	isnull(Водители.Отчество, '***') AS Отчество_водителя,
	Водители.Код_водителя
	FROM [Водители на перевозках] LEFT JOIN Водители
	ON Водители.Код_водителя = [Водители на перевозках].Код_водителя
UNION
SELECT 	[Водители на перевозках].Код_перевозки,
	isnull(Водители.Фамилия, '***') AS Фамилия_водителя,
	isnull(Водители.Имя, '***') AS Имя_водителя,
	isnull(Водители.Отчество, '***') AS Отчество_водителя,
	Водители.Код_водителя
	FROM [Водители на перевозках] RIGHT JOIN Водители
	ON Водители.Код_водителя = [Водители на перевозках].Код_водителя;

--8.3 (включает соединение INNER JOIN этих таблиц.)
SELECT 	[Водители на перевозках].Код_перевозки,
	isnull(Водители.Фамилия, '***') AS Фамилия_водителя,
	isnull(Водители.Имя, '***') AS Имя_водителя,
	isnull(Водители.Отчество, '***') AS Отчество_водителя,
	Водители.Код_водителя
	FROM Водители INNER JOIN [Водители на перевозках]
	ON Водители.Код_водителя = [Водители на перевозках].Код_водителя;

--8 Создать три новых запроса:
--8.4 запрос, результат которого содержит данные левой (в операции FULL OUTER JOIN) таблицы и не содержит данные правой; 
--LEFT JOIN с исключением INNER JOIN'а
SELECT 	[Водители на перевозках].Код_перевозки,
	isnull(Водители.Фамилия, '***') AS Фамилия_водителя,
	isnull(Водители.Имя, '***') AS Имя_водителя,
	isnull(Водители.Отчество, '***') AS Отчество_водителя,
	Водители.Код_водителя
	FROM Водители FULL JOIN [Водители на перевозках]
	ON Водители.Код_водителя = [Водители на перевозках].Код_водителя
	WHERE Водители.Код_водителя IS NOT NULL 
	AND [Водители на перевозках].Код_водителя IS NULL
	AND [Водители на перевозках].Код_перевозки IS NULL;

--8.5 запрос, результат которого содержит данные правой таблицы и не содержащие данные л-вой; 
--RIGHT JOIN с исключением INNER JOIN'а
SELECT 	[Водители на перевозках].Код_перевозки,
	isnull(Водители.Фамилия, '***') AS Фамилия_водителя,
	isnull(Водители.Имя, '***') AS Имя_водителя,
	isnull(Водители.Отчество, '***') AS Отчество_водителя,
	Водители.Код_водителя
	FROM Водители FULL JOIN [Водители на перевозках]
	ON Водители.Код_водителя = [Водители на перевозках].Код_водителя
	WHERE Водители.Код_водителя IS NULL 
	AND [Водители на перевозках].Код_водителя IS NOT NULL
	AND [Водители на перевозках].Код_перевозки IS NOT NULL;

--8.6 запрос, результат которого содержит данные правой таблицы и левой таблиц;
SELECT 	[Водители на перевозках].Код_перевозки,
	isnull(Водители.Фамилия, '***') AS Фамилия_водителя,
	isnull(Водители.Имя, '***') AS Имя_водителя,
	isnull(Водители.Отчество, '***') AS Отчество_водителя,
	Водители.Код_водителя
	FROM Водители FULL JOIN [Водители на перевозках]
	ON Водители.Код_водителя = [Водители на перевозках].Код_водителя;

--9 (Разработать SELECT-запрос на основе CROSS JOIN-соединения таблиц, формирующего результат, аналогичный результату, полученному при выполнении запроса в задании 1.)
SELECT Перевозки.Код_перевозки, Маршруты.Название
	FROM Перевозки CROSS JOIN Маршруты
	WHERE Перевозки.Код_маршрута = Маршруты.Код_маршрута;


